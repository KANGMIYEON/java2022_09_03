package day04;

public class 복습 {

	public static void main(String[] args) {
		/*
		 * 정리
		 * 1. 변수
		 * - 일반변수(기본형) : 값을 저장하는 기본 메모리공간
		 *		1. 정수형 : int, byte, short, long(접미사 L(l))
		 *		2. 실수형 : double, float(접미사 F(f))
		 * 		3. 문자형 : char(정수형으로 분류하기도 함 : 유니코드표 코드로 저장) : 1글자
		 * 		4. 논리형 : boolean
		 * - 참조변수 : 객체의 주소를 정하는 변수(객체명) : new 키워드 통해 객체 생성
		 * - 자료형변환 : 변수, 상수, 리터럴값들을 일시적으로 다른 자료형으로 변환(casting)
		 * 		1. 자동형변환 : 정수 -> 실수, 작은바이트 -> 큰바이트
		 * 		2. 명시적형변환 : 자동으로 자료형변환이 되지 않아서 에러가 발생하면
		 * 						(자료형)변수명 => 명시적 자료형 변환을 해줘야 한다.
		 * 2. 연산자
		 * - 대입연산자 (=)
		 * 		- 오른쪽에 있는 값을 왼쪽 변수에 저장
		 * 		- 왼쪽에는 반드시 저장이 가능한 변수/객체가 와야 한다.
		 * 		- 왼쪽과 오른쪽의 자료형은 반드시 같아야 한다.
		 * - 산술연산자 (+ - * / %)
		 * 		- 정수 / 정수 => 정수, 0으로 나눌 수 없다(예외발생)
		 * - 비교연산자 (>=, <-, >, <, ==, !=)
		 * 		- 결과가 항상 true / false로 표현됨.
		 * 		- == (같은지 비교하는 연산자)
		 * - 논리연산자 ( &&, ||, ! )
		 * 		- && : and 여러개의 조건이 모두 맞아야 true, ~이고, ~면서
		 * 		- || : or 여러개의 조건 중 하나만 맞아도 true, ~거나, ~또는
		 * 		- ! : not 현재 조건의 반대
		 * - 증감연산자 (++, --) : 1씩증가, 1씩감소
		 * - 조건선택연산자 ( 조건식 ? true : false )
		 * 		- 조건식이 참이면 true 선택, 거짓이면 false 선택
		 * 
		 * 3. 조건문 : 조건식이 참이면 실행문을 실행
		 * - if문
		 * 		if(조건식){
		 * 		실행문;
		 * 		}
		 * 
		 * 		if(조건식){
		 * 		실행문;
		 * 		} else {
		 * 		실행문;
		 * 		}
		 * 
		 * 		if(조건식){
		 * 		실행문;
		 * 		} else if(조건식){
		 * 		실행문;
		 * 		} ...
		 * 
		 * - switch문
		 * 		switch(변수/식){
		 * 			case 값:
		 * 				실행문;
		 * 				break; // break를 적지 않으면 이후 모든 case가 전부 실행됨.
		 * 			case 값2:
		 * 				실행문;
		 * 				break;
		 * 			...
		 * 			default:
		 * 				실행문;
		 * 				(break;) => 생략가능
		 * 		}
		 * 
		 * 4. 반복문
		 * - for문
		 * 		for(1.초기화; 2.5.조건식; 4.7.증감식){
		 * 		3.6.실행문;
		 * 		}
		 * 
		 * - while문
		 * 		while(조건식){ // 반드시 참이 돼야 반복이 됨.
		 * 		실행문; // 조건식에서 사용한 변수의 증감이 실행문에서 일어나는 형태로 작성
		 * 		}
		 * 
		 * - do~while문
		 * 		do{ // 최소 1번은 무조건 실행되는 반복문
		 * 		실행문
		 * 		} while(조건식); // 조건이 참이어야 반복
		 * 
		 * - break;
		 * 		- 반복문을 빠져나가는 역할 / switch문을 빠져나오는 역할
		 * 		- if문을 같이 동반
		 * 
		 * - continue;
		 * 		- skip, pass 하는 역할
		 * 		- 조건이 맞을 때 실행하지 않고, 다음 증감으로 이동
		 *		- while문에서의 continue는 증감을 찾을 수 없기 때문에 조건식으로 바로 이동
		 *
		 * 5. 배열
		 * 	- ★동일한 자료형★을 가진 데이터를 모아놓은 형태
		 * 	- 배열 선언
		 * 		자료형[] 배열명;
		 * 		자료형 배열명[];
		 * 	- 배열 생성
		 * 		- 자료형[] 배열명 = new 자료형[개수]; // 선언하고, 생성
		 * 		- 배열명 = new 자료형[개수];
		 * 		- 배열의 index : 0 ~ 배열.length-1
		 * 		- 배열.length : 배열의 총길이
		 * 		- 배열명[index] = 값; // 배열의 index번지에 값을 저장
		 * 		- 변수 = 배열명[index]; // 배열의 index 번지에 있는 값을 추출(변수에 저장)
		 * 
		 * */

	}

}
